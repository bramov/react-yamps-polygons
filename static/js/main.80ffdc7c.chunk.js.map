{"version":3,"sources":["App.js","index.js"],"names":["countries","code","coords","imageUri","App","useState","country","setCountry","center","zoom","map","setMap","mapRef","useRef","className","query","lang","defaultValue","onChange","e","selectedCountry","find","el","target","value","state","width","instanceRef","onLoad","ymaps","current","objectManager","ObjectManager","borders","load","quality","then","result","polygon","features","properties","iso3166","options","fillOpacity","fillImageHref","fillMethod","strokeColor","strokeOpacity","fillColor","add","geoObjects","getRegion","modules","geometry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKAGMA,EAAY,CAChB,CACEC,KAAM,KACNC,OAAQ,CAAC,WAAY,UACrBC,SAAU,8HAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,gDAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,gHAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,gHAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,gKAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,8EAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,0EAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,WAAY,UACrBC,SAAU,6HAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,WAAY,WACrBC,SAAU,0DAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,WACpBC,SAAU,qHAEZ,CACEF,KAAM,KACNC,OAAQ,CAAC,UAAW,UACpBC,SAAU,+GAwECC,MAnEf,WAAgB,IAAD,EACiBC,mBAASL,EAAU,IADpC,mBACNM,EADM,KACGC,EADH,OAESF,mBAAS,CAACG,OAAQF,EAAQJ,OAAQO,KAAM,IAFjD,mBAENC,EAFM,KAEDC,EAFC,KASPC,EAASC,iBAAO,MA6BtB,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAA0BC,MAAO,CAAEC,KAAM,MAAzC,UACE,yBAAQC,aAAcX,EAAQL,KAAMiB,SAtCrB,SAACC,GACpB,IAAMC,EAAkBpB,EAAUqB,MAAK,SAAAC,GAAE,OAAIA,EAAGrB,OAASkB,EAAEI,OAAOC,SAClEjB,EAAWa,GACXT,EAAO,CAACH,OAAQY,EAAgBlB,OAAQO,KAAM,KAmC1C,UACE,wBAAQe,MAAM,KAAd,wDACA,wBAAQA,MAAM,KAAd,8DACA,wBAAQA,MAAM,KAAd,wDACA,wBAAQA,MAAM,KAAd,kDACA,wBAAQA,MAAM,KAAd,8DACA,wBAAQA,MAAM,KAAd,8DACA,wBAAQA,MAAM,KAAd,wDACA,wBAAQA,MAAM,KAAd,8DACA,wBAAQA,MAAM,KAAd,kDACA,wBAAQA,MAAM,KAAd,oEACA,wBAAQA,MAAM,KAAd,qDAEF,cAAC,IAAD,CAAKC,MAAOf,EACPgB,MAAM,OACNC,YAAaf,EACbgB,OAAQ,SAAAC,GAAK,OA7CN,SAACA,GACjB,GAAIjB,GAAUA,EAAOkB,QAAS,CAC5B,IAAMC,EAAgB,IAAIF,EAAMG,cAChCH,EAAMI,QACHC,KAAK,MAAO,CACXlB,KAAM,KACNmB,QAAS,IAEVC,MAAK,SAACC,GAEL,IAAMC,EAAUD,EAAOE,SAASlB,MAAK,SAAAC,GAAE,OAAIA,EAAGkB,WAAWC,UAAYnC,EAAQL,QAC7EqC,EAAQI,QAAU,CAChBC,YAAa,GACbC,cAAetC,EAAQH,SACvB0C,WAAY,UACZC,YAAa,OACbC,cAAe,GACfC,UAAW,WAGbjB,EAAckB,IAAIX,GAClB1B,EAAOkB,QAAQoB,WAAWD,IAAIlB,OAwBVoB,CAAUtB,IAC3BuB,QAAS,CAAC,UAAW,iBAJ1B,SAME,cAAC,IAAD,CAAWC,SAAU/C,EAAQJ,aApBrBI,EAAQL,SCjG1BqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.80ffdc7c.chunk.js","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\"\nimport {YMaps, Map, Placemark} from 'react-yandex-maps';\n\nconst countries = [\n  {\n    code: 'ES',\n    coords: [40.419348, -3.700897],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Bandera_de_Espa%C3%B1a.svg/1200px-Bandera_de_Espa%C3%B1a.svg.png'\n  },\n  {\n    code: 'NO',\n    coords: [59.912752, 10.734365],\n    imageUri: 'https://wallpaperaccess.com/full/1093947.jpg'\n  },\n  {\n    code: 'RO',\n    coords: [44.428089, 26.102437],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Flag_of_Romania.svg/1200px-Flag_of_Romania.svg.png'\n  },\n  {\n    code: 'GE',\n    coords: [41.697048, 44.799307],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Flag_of_Georgia.svg/1200px-Flag_of_Georgia.svg.png'\n  },\n  {\n    code: 'BY',\n    coords: [53.902284, 27.561831],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Flag_of_Belarus_%281995%E2%80%932012%29.svg/1280px-Flag_of_Belarus_%281995%E2%80%932012%29.svg.png'\n  },\n  {\n    code: 'IS',\n    coords: [64.125891, -21.849929],\n    imageUri: 'https://www.countryflags.com/wp-content/uploads/iceland-flag-png-large.png'\n  },\n  {\n    code: 'MX',\n    coords: [19.432605, -99.133296],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/f/fc/Flag_of_Mexico.svg'\n  },\n  {\n    code: 'IE',\n    coords: [53.382539, -6.206559],\n    imageUri: 'https://cdn11.bigcommerce.com/s-ey7tq/images/stencil/1280x1280/products/3320/18821/ireland-flag__72814.1575333970.jpg?c=2'\n  },\n  {\n    code: 'CA',\n    coords: [45.401795, -75.699583],\n    imageUri: 'https://www.worldatlas.com/r/w480/img/flag/ca-flag.jpg'\n  },\n  {\n    code: 'KZ',\n    coords: [51.128207, 71.430411],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Flag_of_Kazakhstan.svg/800px-Flag_of_Kazakhstan.svg.png'\n  },\n  {\n    code: 'MC',\n    coords: [43.731082, 7.422788],\n    imageUri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Flag_of_Monaco.svg/1280px-Flag_of_Monaco.svg.png'\n  }\n];\n\n\nfunction App() {\n  const [country, setCountry] = useState(countries[3]);\n  const [map, setMap] = useState({center: country.coords, zoom: 4})\n  const handleChange = (e) => {\n    const selectedCountry = countries.find(el => el.code === e.target.value);\n    setCountry(selectedCountry);\n    setMap({center: selectedCountry.coords, zoom: 4})\n  }\n\n  const mapRef = useRef(null);\n\n\n  const getRegion = (ymaps) => {\n    if (mapRef && mapRef.current) {\n      const objectManager = new ymaps.ObjectManager();\n      ymaps.borders\n        .load(\"001\", {\n          lang: 'en',\n          quality: 3\n        })\n        .then((result) => {\n\n          const polygon = result.features.find(el => el.properties.iso3166 === country.code)\n          polygon.options = {\n            fillOpacity: 0.6,\n            fillImageHref: country.imageUri,\n            fillMethod: 'stretch',\n            strokeColor: \"#FFF\",\n            strokeOpacity: 0.5,\n            fillColor: \"#3D4C76\"\n          }\n\n          objectManager.add(polygon);\n          mapRef.current.geoObjects.add(objectManager);\n\n        });\n    }\n  };\n  return (\n    <div className=\"App\">\n      <YMaps key={country.code} query={{ lang: 'en' }}>\n        <select defaultValue={country.code} onChange={handleChange}>\n          <option value=\"ES\">Испания</option>\n          <option value=\"NO\">Норвегия</option>\n          <option value=\"RO\">Румыния</option>\n          <option value=\"GE\">Грузия</option>\n          <option value=\"BY\">Беларусь</option>\n          <option value=\"IS\">Исландия</option>\n          <option value=\"MX\">Мексика</option>\n          <option value=\"IE\">Ирландия</option>\n          <option value=\"CA\">Канада</option>\n          <option value=\"KZ\">Казахстан</option>\n          <option value=\"MC\">Монако</option>\n        </select>\n        <Map state={map}\n             width=\"100%\"\n             instanceRef={mapRef}\n             onLoad={ymaps => getRegion(ymaps)}\n             modules={[\"borders\", \"ObjectManager\"]}\n        >\n          <Placemark geometry={country.coords}/>\n        </Map>\n      </YMaps>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}